{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoButtonWrapper","Button","button","TodoContent","h2","props","isDone","TodoInput","input","TodoButton","RedButton","ButtonChangeState","id","App","useState","content","todos","setTodos","value","setValue","filter","setFilter","handleDelete","todo","handleToggleIsDone","map","className","type","placeholder","onChange","e","target","onClick","TodoItem","FilterState","size","data-todo-id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e624a3a4.chunk.js","sourcesContent":["import './App.css';\nimport styled from 'styled-components'\nimport {useState} from 'react'\n\nconst TodoItemWrapper = styled.div`\n  display:flex;\n  padding: 8px 16px;\n  border: 1px solid black;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 20px;\n`\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n  paddind: 4px;\n`\nconst Button = styled.button`\n  &:hover {\n    color:red;\n  }\n  border-radius: 10px;\n  border: 0px;\n`\nconst TodoContent = styled.h2`\n  color:black;\n  font-size:20px;\n  ${props => props.isDone && `\n    text-decoration: line-through;\n  `}\n  margin: 0px 20px;\n`\nconst TodoInput = styled.input`\n  padding: 10px;\n  width: 20%;\n  margin: 10px;\n  border-radius: 8px;\n  border: 2px solid;\n`\nconst TodoButton = styled.button`\n  padding: 2px 10px;\n  border-radius: 8px;\n  border: 0px;\n`\nconst RedButton =styled.button`\n  color: red;\n  margin-left: 10px;\n  border-radius: 10px;\n  border: 0;\n`\nconst ButtonChangeState = styled.button`\n  margin: 0 5px;\n  padding: 5px 10px;\n  border: 0;\n  border-radius: 5px;\n`\n\nlet id = 3\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      content: '跑步',\n      isDone: true,\n    },\n    {\n      id: 2,\n      content: '吃飯',\n      isDone: false,\n    }\n  ]);\n  const [value, setValue] = useState('');\n  const [filter, setFilter] = useState('all');\n  // Add\n  const handleButtonClick= () => \n  {\n    setTodos([...todos, \n      {\n        id,\n        content: value,\n      }\n    ])\n    setValue('');\n    id++\n  }\n  // Let value into input\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n  // Delete\n  const handleDelete = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  };\n  // DeletAll\n  const handleDeleteAll = () => {\n    setTodos([])\n  };\n  // ShowAll\n  const handleShowAll =() => {\n    setFilter('all');\n  };\n  // Checked\n  const handleToggleIsDone = (id) => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        isDone: !todo.isDone\n      }\n    }))\n  };\n  // Checked(isDone)\n  const handleToggleIsDoneAll =() => {\n    setFilter('done');\n  };\n  // NotChecked(Undone)\n  const handleToggleIsNotDoneAll =() => {\n    setFilter('undone');\n  };\n  return (\n    <div className=\"App\">\n      <TodoInput input type=\"text\" placeholder=\"想想做些什麼\" value={value} onChange={handleInputChange}></TodoInput>\n      <TodoButton onClick={handleButtonClick}>新增</TodoButton>\n      <div className=\"filter\">\n        <ButtonChangeState onClick={handleShowAll}>全部</ButtonChangeState>\n        <ButtonChangeState onClick={handleToggleIsDoneAll}>已完成</ButtonChangeState>\n        <ButtonChangeState onClick={handleToggleIsNotDoneAll}>未完成</ButtonChangeState>\n        <ButtonChangeState onClick={handleDeleteAll}>全部清除</ButtonChangeState>\n      </div>\n      {FilterState(filter, todos)}\n    </div>\n  );\n  function FilterState(filter, todos) {\n    if (filter === 'all') {\n      return todos.map((todo) => (\n        // check state \n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleDelete={handleDelete}\n          handleToggleIsDone={handleToggleIsDone}\n        />\n      ));\n    }\n    if (filter === 'done') {\n      return todos\n        // check state \n        .filter((todo) => todo.isDone)\n        .map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDelete={handleDelete}\n            handleToggleIsDone={handleToggleIsDone}\n          />\n        ));\n    }\n    if (filter === 'undone') {\n      return todos\n        // check state  \n        .filter((todo) => !todo.isDone)\n        .map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDelete={handleDelete}\n            handleToggleIsDone={handleToggleIsDone}\n          />\n        ));\n    }\n  }\n  function TodoItem({className, size, todo, handleDelete, handleToggleIsDone}) {\n    const handleToggleClick = () => {\n      handleToggleIsDone(todo.id)\n    };\n   const handleDeleteClick = () => {\n      handleDelete(todo.id)\n    };  \n    return (\n      <TodoItemWrapper className={className} data-todo-id={todo.id}>\n        <TodoContent isDone={todo.isDone} size={size}>{todo.content}</TodoContent>\n        <TodoButtonWrapper>\n        <Button onClick={handleToggleClick}>{todo.isDone ? '未完成':'已完成'}</Button>\n        <RedButton onClick={handleDeleteClick}>刪除</RedButton>\n        </TodoButtonWrapper>\n      </TodoItemWrapper>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}